#!/usr/bin/env bash
set -euo pipefail

main() {
  if [[ $# -eq 0 ]]; then
    echo "Usage: rim-mod <WorkshopModID | WorkshopURL> [more IDs/URLs...]" >&2
    return 1
  fi

  local appid=294100
  local mods_dir="$HOME/Games/rimworld/drive_c/Program Files (x86)/RimWorld/Mods"

  if ! command -v steamcmd >/dev/null 2>&1; then
    echo "steamcmd not found. Install it: yay -S steamcmd" >&2
    return 1
  fi

  for input in "$@"; do
    echo "──────────────────────────────────────────────"
    echo "Processing: $input"

    # Extract ModID if URL was passed
    local modid="$input"
    if [[ "$input" == http* ]]; then
      modid="${input##*id=}"
      modid="${modid%%[^0-9]*}"
    fi
    if ! [[ "$modid" =~ ^[0-9]+$ ]]; then
      echo "Could not parse a numeric ModID from: $input" >&2
      continue
    fi

    echo ">>> Downloading mod $modid via SteamCMD..."
    steamcmd +login anonymous +workshop_download_item "$appid" "$modid" +quit

    # Candidate workshop roots
    local candidates=(
      "$HOME/.steam/steamapps/workshop/content/$appid/$modid"
      "$HOME/.steam/SteamApps/workshop/content/$appid/$modid"
      "$HOME/.local/share/Steam/steamapps/workshop/content/$appid/$modid"
    )

    # Resolve path containing the newest versioned folder
    local src=""
    local src_best_version="0"
    local p
    for p in "${candidates[@]}"; do
      [[ -d "$p" ]] || continue

      local best_version="0"
      local version_dirs
      version_dirs=$(find "$p" -maxdepth 1 -mindepth 1 -type d -printf '%f\n' 2>/dev/null | grep -E '^[0-9]+(\.[0-9]+)*$' | sort -V | tail -n1 || true)
      [[ -n "$version_dirs" ]] && best_version="$version_dirs"

      if [[ "$src" == "" ]]; then
        src="$p"
        src_best_version="$best_version"
        continue
      fi

      if [[ "$best_version" != "$src_best_version" ]]; then
        local top
        top=$(printf '%s\n%s\n' "$src_best_version" "$best_version" | sort -V | tail -n1)
        if [[ "$top" == "$best_version" ]]; then
          src="$p"
          src_best_version="$best_version"
        fi
        continue
      fi

      # Tie-breaker: prefer newest About.xml timestamp when versions match
      local about="$p/About/About.xml"
      local about_src="$src/About/About.xml"
      if [[ -f "$about" && -f "$about_src" ]]; then
        local mtime_about mtime_src
        mtime_about=$(stat -c '%Y' "$about" 2>/dev/null || echo 0)
        mtime_src=$(stat -c '%Y' "$about_src" 2>/dev/null || echo 0)
        if (( mtime_about > mtime_src )); then
          src="$p"
          src_best_version="$best_version"
          continue
        fi
      fi

      # Fallback tie-breaker: newer directory mtime
      local mtime_dir mtime_dir_src
      mtime_dir=$(stat -c '%Y' "$p" 2>/dev/null || echo 0)
      mtime_dir_src=$(stat -c '%Y' "$src" 2>/dev/null || echo 0)
      if (( mtime_dir > mtime_dir_src )); then
        src="$p"
        src_best_version="$best_version"
      fi
    done

    if [[ -z "$src" ]]; then
      echo "!!! Downloaded path not found for $modid. Checked:" >&2
      printf ' - %s\n' "${candidates[@]}" >&2
      echo "Tip: run 'find ~/.steam ~/.local/share/Steam -type d -name $modid' to locate it." >&2
      continue
    fi

    # Read mod name from About.xml
    local modname="mod_$modid"
    local about="$src/About/About.xml"
    if [[ -f "$about" ]]; then
      local n
      # shellcheck disable=SC2016
      n=$(grep -oPm1 '(?<=<name>)[^<]+' "$about" 2>/dev/null | tr -d $'\r' | sed 's/[[:space:]]\+$//' || true)
      [[ -n "$n" ]] && modname="$n"
    fi

    # Sanitize destination folder name (replace path separators, trim spaces)
    modname=$(echo -n "$modname" | sed -E 's#[/\\]+# - #g; s/  +/ /g; s/^[[:space:]]+|[[:space:]]+$//g')

    local dest="$mods_dir/$modname"
    echo ">>> Installing to: $dest"
    mkdir -p "$mods_dir"
    rm -rf "$dest"
    mkdir -p "$dest"
    rsync -a --delete "$src"/ "$dest"/

    if [[ -d "$dest" ]]; then
      echo "✅ Installed '$modname'."
    else
      echo "❌ Install failed for $modid" >&2
    fi
  done

  echo "──────────────────────────────────────────────"
  echo "All done. Enable mods in RimWorld's mod menu."
}

main "$@"
